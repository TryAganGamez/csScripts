using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class playerMove : MonoBehaviour {

	public float runSpeed;
	public float walkSpeed;
	Rigidbody myRb;
	Animator myAnim;
	bool facingRight;
	bool grounded=false;
	Collider[] groundCollisions;
	float groundCheckRadius=0.2f;
	public LayerMask groundLayer;
	public Transform groundCheck;
	public float jumpHeight;
	bool running;
	public Text scoreTxt;

	// Use this for initialization
	void Start () {
		myRb = GetComponent<Rigidbody> ();
		myAnim = GetComponent<Animator> ();
		facingRight = true;
	}

	// Update is called once per frame
	void Update () {

	}

	//function
	void FixedUpdate(){

		running = false;

		if (grounded && Input.GetAxis ("Jump") > 0) {
			grounded = false;
			myAnim.SetBool ("grounded", grounded);
			myRb.AddForce(new Vector3(0,jumpHeight,0));
		}

		groundCollisions = Physics.OverlapSphere (groundCheck.position, groundCheckRadius, groundLayer);
		if (groundCollisions.Length > 0)
			grounded = true;
		else
			grounded = false;

		myAnim.SetBool ("grounded", grounded);


		float move = Input.GetAxis ("Horizontal");
		myAnim.SetFloat ("speed", Mathf.Abs (move));

		float firing = Input.GetAxis ("Fire1");
		myAnim.SetFloat ("shooting", firing);

		float sneaking = Input.GetAxisRaw ("Fire3");
		myAnim.SetFloat ("sneaking", sneaking);

		if ((sneaking > 0 || firing>0) && grounded) {
			
			myRb.velocity = new Vector3 (move * walkSpeed, myRb.velocity.y, 0);
		} else {
			myRb.velocity = new Vector3 (move * runSpeed, myRb.velocity.y, 0);
			if (Mathf.Abs (move) > 0)
				running = true;
		}

		if (move > 0 && !facingRight)Flip ();
		else if (move < 0 && facingRight)Flip ();

	}
	void Flip(){
		facingRight = !facingRight;
		Vector3 theScale = transform.localScale;
		theScale.z *= -1;
		transform.localScale = theScale;

	}
	public float GetFacing(){
		if (facingRight)
			return 1;
		else
			return -1;
	}
	public bool getRunning(){

		return(running);
	}
}
